{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseName": { "type": "string" },
    "addressSpace": { "type": "string" },
    "vmUser": { "type": "string" },
    "vmPassword": { "type": "securestring" },
    "vmCount": { "type": "int" },
    "makeGateway": { "type": "bool" },
    "rootCert": { "type": "string" }
  },
  "variables": {
    "planName": "[parameters('baseName')]",
    "storageName": "[parameters('baseName')]",
    "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
    "vnetName": "[concat(parameters('baseName'),'-vnet')]",
    "gatewayName": "[concat(parameters('baseName'),'-gateway')]",
    "ipName": "[concat(parameters('baseName'),'-gateway-ip')]",
    "addressSpace": "[concat(parameters('addressSpace'),'.0/25')]",
    "mainSubnet": "[concat(parameters('addressSpace'),'.0/26')]",
    "gatewaySubnet": "[concat(parameters('addressSpace'),'.120/29')]",
    "gatewayAddressSpace": "[concat(parameters('addressSpace'),'.248/29')]",
    "funcName": "[parameters('baseName')]",
    "appInsightsName": "[parameters('baseName')]",
    "vmBaseName": "[parameters('baseName')]",
    "psScriptPath": "[concat('https://',variables('storageName'),'.blob.core.windows.net/scripts/AttachAzureFilesShare.ps1')]"
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "planName": {
      "type": "string",
      "value": "[variables('planName')]"
    },
    "storageName": {
      "type": "string",
      "value": "[variables('storageName')]"
    },
    "storageId": {
      "type": "securestring",
      "value": "[variables('storageId')]"
    },
    "storageKey": {
      "type": "securestring",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').keys[0].value]"
    },
    "vnetName": {
      "type": "string",
      "value": "[variables('vnetName')]"
    },
    "gatewayName": {
      "type": "string",
      "value": "[variables('gatewayName')]"
    },
    "ipName": {
      "type": "string",
      "value": "[variables('ipName')]"
    },
    "addressSpace": {
      "type": "string",
      "value": "[variables('addressSpace')]"
    },
    "mainSubnet": {
      "type": "string",
      "value": "[variables('mainSubnet')]"
    },
    "gatewaySubnet": {
      "type": "string",
      "value": "[variables('gatewaySubnet')]"
    },
    "gatewayAddressSpace": {
      "type": "string",
      "value": "[variables('gatewaySubnet')]"
    },
    "funcName": {
      "type": "string",
      "value": "[variables('funcName')]"
    },
    "appInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "appInsightsKey": {
      "type": "securestring",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
    },
    "vmBaseName": {
      "type": "string",
      "value": "[variables('vmBaseName')]"
    },
    "psScriptPath": {
      "type": "string",
      "value": "[variables('psScriptPath')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": { "name": "Y1" },
      "kind": "functionapp",
      "name": "[variables('planName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": { "name": "[variables('planName')]" }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": { "name": "Standard_LRS" },
      "kind": "Storage",
      "name": "[variables('storageName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": { "supportsHttpsTrafficOnly": true }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "sku": { "name": "Basic" },
      "name": "[variables('ipName')]",
      "apiVersion": "2018-01-01",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "apiVersion": "2018-01-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": { "addressPrefixes": [ "[variables('addressSpace')]" ] },
        "subnets": [
          {
            "name": "Default",
            "properties": { "addressPrefix": "[variables('mainSubnet')]" }
          },
          {
            "name": "GatewaySubnet",
            "properties": { "addressPrefix": "[variables('gatewaySubnet')]" }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "condition": "[parameters('makeGateway')]",
      "name": "[variables('gatewayName')]",
      "apiVersion": "2018-01-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]" },
              "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'GatewaySubnet')]" }
            }
          }
        ],
        "sku": { "name": "Basic" },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "vpnClientConfiguration": {
          "vpnClientAddressPool": { "addressPrefixes": [ "[variables('gatewayAddressSpace')]" ] },
          "vpnClientProtocols": [ "SSTP" ],
          "vpnClientRootCertificates": [
            {
              "name": "Default",
              "properties": { "publicCertData": "[parameters('rootCert')]" }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('funcName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(variables('funcName'), '/web')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "defaultDocuments": [],
        "phpVersion": ""
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.Web/sites', variables('funcName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(variables('funcName'), '/appsettings')]",
      "apiVersion": "2016-08-01",
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]",
        "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=', listKeys(variables('storageId'), '2016-01-01').keys[0].value,';')]",
        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageName'),';AccountKey=', listKeys(variables('storageId'), '2016-01-01').keys[0].value,';')]",
        "FUNCTION_APP_EDIT_MODE": "readonly",
        "FUNCTIONS_EXTENSION_VERSION": "~1"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/Components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.Web/sites', variables('funcName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/Components",
      "kind": "other",
      "name": "[variables('appInsightsName')]",
      "apiVersion": "2015-05-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ApplicationId": "[variables('appInsightsName')]",
        "Application_Type": "other",
        "Ver": "v2"
      },
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('funcName'))]": "Resource"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('funcName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmBaseName'),copyIndex(1),'-nic')]",
      "apiVersion": "2018-01-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'Default')]" }
            }
          }
        ]
      },
      "copy": {
        "name": "niccopy",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/disks",
      "name": "[concat(variables('vmBaseName'),copyIndex(1),'_datadisk')]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "sku": { "name": "Standard_LRS" },
      "properties": {
        "creationData": { "createOption": "Empty" },
        "diskSizeGB": 1023
      },
      "copy": {
        "name": "diskcopy",
        "count": "[parameters('vmCount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmBaseName'),copyIndex(1))]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": { "vmSize": "Standard_D2s_v3" },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter-smalldisk",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(variables('vmBaseName'),copyIndex(1),'_osdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": { "storageAccountType": "Premium_LRS" },
            "diskSizeGB": 31
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('vmBaseName'),copyIndex(1),'_datadisk')]",
              "createOption": "Attach",
              "managedDisk": { "id": "[resourceId('Microsoft.Compute/disks', concat(variables('vmBaseName'),copyIndex(1),'_datadisk'))]" }
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vmBaseName')]",
          "adminUsername": "[parameters('vmUser')]",
          "adminPassword": "[parameters('vmPassword')]"
        },
        "networkProfile": { "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmBaseName'),copyIndex(1),'-nic'))]" } ] }
      },
      "copy": {
        "name": "vmcopy",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmBaseName'),copyIndex(1),'-nic'))]",
        "[resourceId('Microsoft.Compute/disks', concat(variables('vmBaseName'),copyIndex(1),'_datadisk'))]"
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmBaseName'),copyIndex(1), '/psscript')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": { "fileUris": [ "[variables('psScriptPath')]" ] },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File AttachAzureFilesShare.ps1 -storageName ',variables('storageName'),' -storageKey ',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').keys[0].value,' -shareName vmshare -driveLetter Z')]",
          "storageAccountName": "[variables('storageName')]",
          "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').keys[0].value]"
        }
      },
      "copy": {
        "name": "vmscript",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmBaseName'),copyIndex(1),'-nic'))]",
        "[resourceId('Microsoft.Compute/disks', concat(variables('vmBaseName'),copyIndex(1),'_datadisk'))]",
        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmBaseName'),copyIndex(1)))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    }
  ]
}