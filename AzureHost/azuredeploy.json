{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "acceptRequestName": "AcceptRequest",
    "appInsightsName": "[resourceGroup().name]",
    "blobConnectionName": "Connection-AzureBlob",
    "queueConnectionName": "Connection-AzureQueue",
    "storageBlobApiId": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]",
    "storageName": "[uniqueString(resourceGroup().id)]",
    "storageQueueApiId": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azurequeues')]"
  },
  "outputs": {
    "acceptRequestName": {
      "type": "string",
      "value": "[variables('acceptRequestName')]"
    },
    "appInsightsKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
    },
    "appInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "blobConnectionName": {
      "type": "string",
      "value": "[variables('blobConnectionName')]"
    },
    "queueConnectionName": {
      "type": "string",
      "value": "[variables('queueConnectionName')]"
    },
    "storageBlobApiId": {
      "type": "string",
      "value": "[variables('storageBlobApiId')]"
    },
    "storageKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').keys[0].value]"
    },
    "storageName": {
      "type": "string",
      "value": "[variables('storageName')]"
    },
    "storageQueueApiId": {
      "type": "string",
      "value": "[variables('storageQueueApiId')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": { "name": "Standard_LRS" },
      "kind": "StorageV2",
      "name": "[variables('storageName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "properties": { "supportsHttpsTrafficOnly": true },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "default/todo",
          "dependsOn": [ "[variables('storageName')]" ]
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "default/done",
          "dependsOn": [ "[variables('storageName')]" ]
        }
      ]
    },
    {
      "type": "Microsoft.Insights/Components",
      "kind": "other",
      "name": "[variables('appInsightsName')]",
      "apiVersion": "2015-05-01",
      "location": "[resourceGroup().location]",
      "properties": { "Application_Type": "other" }
    },
    {
      "type": "Microsoft.Web/connections",
      "name": "[variables('blobConnectionName')]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[variables('blobConnectionName')]",
        "api": { "id": "[variables('storageBlobApiId')]" },
        "parameterValues": {
          "accountName": "[variables('storageName')]",
          "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').keys[0].value]"
        }
      },
      "dependsOn": [ "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]" ]
    },
    {
      "type": "Microsoft.Web/connections",
      "name": "[variables('queueConnectionName')]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[variables('queueConnectionName')]",
        "api": { "id": "[variables('storageQueueApiId')]" },
        "parameterValues": {
          "storageaccount": "[variables('storageName')]",
          "sharedkey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').keys[0].value]"
        }
      },
      "dependsOn": [ "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]" ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "[variables('acceptRequestName')]",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": { "$connections": { "type": "Object" } },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": { "method": "POST" }
            }
          },
          "actions": {
            "Create_blob": {
              "runAfter": { "Initialize_variable": [ "Succeeded" ] },
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()",
                "host": { "connection": { "name": "@parameters('$connections')['azureblob']['connectionId']" } },
                "method": "post",
                "path": "/datasets/default/files",
                "queries": {
                  "folderPath": "/todo",
                  "name": "@variables('name')",
                  "queryParametersSingleEncoded": true
                }
              },
              "runtimeConfiguration": { "contentTransfer": { "transferMode": "Chunked" } }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "name",
                    "type": "String",
                    "value": "@{guid()}"
                  }
                ]
              }
            },
            "Put_a_message_on_a_queue": {
              "runAfter": { "Create_blob": [ "Succeeded" ] },
              "type": "ApiConnection",
              "inputs": {
                "body": "@variables('name')",
                "host": { "connection": { "name": "@parameters('$connections')['azurequeues']['connectionId']" } },
                "method": "post",
                "path": "/@{encodeURIComponent('todo')}/messages"
              }
            },
            "Response": {
              "runAfter": { "Put_a_message_on_a_queue": [ "Succeeded" ] },
              "type": "Response",
              "kind": "Http",
              "inputs": {
                "body": "@concat('{ \"key\":\"', variables('name'),'\" }')",
                "headers": { "content-type": "application/json" },
                "schema": {
                  "properties": { "key": { "type": "string" } },
                  "type": "object"
                },
                "statusCode": 202
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('blobConnectionName'))]",
                "id": "[variables('storageBlobApiId')]"
              },
              "azurequeues": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]",
                "id": "[variables('storageQueueApiId')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/connections', variables('blobConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]"
      ]
    }
  ]
}