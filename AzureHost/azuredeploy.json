{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "acceptRequestName": "AcceptRequest",
    "appInsightsName": "[resourceGroup().name]",
    "blobConnectionName": "Connection-AzureBlob",
    "blobConnectionApiId": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]",
    "notifyResultName": "NotifyResult",
    "processRequestName": "ProcessRequest",
    "queueConnectionName": "Connection-AzureQueue",
    "queueConnectionApiId": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azurequeues')]",
    "registryName": "[uniqueString(resourceGroup().id)]",
    "storageName": "[uniqueString(resourceGroup().id)]",
    "surfaceResultName": "SurfaceResult",
    "tableConnectionName": "Connection-AzureTable",
    "tableConnectionApiId": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuretables')]"
  },
  "outputs": {
    "acceptRequestName": {
      "type": "string",
      "value": "[variables('acceptRequestName')]"
    },
    "appInsightsKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
    },
    "appInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "blobConnectionName": {
      "type": "string",
      "value": "[variables('blobConnectionName')]"
    },
    "blobConnectionApiId": {
      "type": "string",
      "value": "[variables('blobConnectionApiId')]"
    },
    "notifyResultName": {
      "type": "string",
      "value": "[variables('notifyResultName')]"
    },
    "processRequestName": {
      "type": "string",
      "value": "[variables('processRequestName')]"
    },
    "queueConnectionName": {
      "type": "string",
      "value": "[variables('queueConnectionName')]"
    },
    "queueConnectionApiId": {
      "type": "string",
      "value": "[variables('queueConnectionApiId')]"
    },
    "registryKey": {
      "type": "string",
      "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('registryName')), '2017-10-01').passwords[0].value]"
    },
    "registryName": {
      "type": "string",
      "value": "[variables('registryName')]"
    },
    "storageKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').keys[0].value]"
    },
    "storageName": {
      "type": "string",
      "value": "[variables('storageName')]"
    },
    "surfaceResultName": {
      "type": "string",
      "value": "[variables('surfaceResultName')]"
    },
    "tableConnectionName": {
      "type": "string",
      "value": "[variables('tableConnectionName')]"
    },
    "tableConnectionApiId": {
      "type": "string",
      "value": "[variables('tableConnectionApiId')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": { "name": "Standard_LRS" },
      "kind": "StorageV2",
      "name": "[variables('storageName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "properties": { "supportsHttpsTrafficOnly": true },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "default/todo",
          "dependsOn": [ "[variables('storageName')]" ]
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "default/done",
          "dependsOn": [ "[variables('storageName')]" ]
        }
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "sku": { "name": "Basic" },
      "name": "[variables('registryName')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "properties": { "adminUserEnabled": true }
    },
    {
      "type": "Microsoft.Insights/Components",
      "kind": "other",
      "name": "[variables('appInsightsName')]",
      "apiVersion": "2015-05-01",
      "location": "[resourceGroup().location]",
      "properties": { "Application_Type": "other" }
    },
    {
      "type": "Microsoft.Web/connections",
      "name": "[variables('blobConnectionName')]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[variables('blobConnectionName')]",
        "api": { "id": "[variables('blobConnectionApiId')]" },
        "parameterValues": {
          "accountName": "[variables('storageName')]",
          "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').keys[0].value]"
        }
      },
      "dependsOn": [ "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]" ]
    },
    {
      "type": "Microsoft.Web/connections",
      "name": "[variables('queueConnectionName')]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[variables('queueConnectionName')]",
        "api": { "id": "[variables('queueConnectionApiId')]" },
        "parameterValues": {
          "storageaccount": "[variables('storageName')]",
          "sharedkey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').keys[0].value]"
        }
      },
      "dependsOn": [ "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]" ]
    },
    {
      "type": "Microsoft.Web/connections",
      "name": "[variables('tableConnectionName')]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[variables('tableConnectionName')]",
        "api": { "id": "[variables('tableConnectionApiId')]" },
        "parameterValues": {
          "storageaccount": "[variables('storageName')]",
          "sharedkey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-07-01').keys[0].value]"
        }
      },
      "dependsOn": [ "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]" ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "[variables('acceptRequestName')]",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": { "$connections": { "type": "Object" } },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": { "method": "POST" }
            }
          },
          "actions": {
            "1.InitializeVariable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "name",
                    "type": "String",
                    "value": "@{guid()}"
                  }
                ]
              }
            },
            "2.CreateBlob": {
              "runAfter": { "1.InitializeVariable": [ "Succeeded" ] },
              "type": "ApiConnection",
              "inputs": {
                "body": "@{triggerBody()}",
                "host": { "connection": { "name": "@parameters('$connections')['azureblob']['connectionId']" } },
                "method": "post",
                "path": "/datasets/default/files",
                "queries": {
                  "folderPath": "/todo",
                  "name": "@variables('name')",
                  "queryParametersSingleEncoded": true
                }
              },
              "runtimeConfiguration": { "contentTransfer": { "transferMode": "Chunked" } }
            },
            "3.InsertEntity": {
              "runAfter": { "2.CreateBlob": [ "Succeeded" ] },
              "type": "ApiConnection",
              "inputs": {
                "body": "@{concat('{ \"PartitionKey\":\"master\", \"RowKey\":\"', variables('name'),'\", \"Status\":\"Processing\", \"CallBackUrl\":', if(equals(triggerOutputs()['headers']?['Callback-Url'], null), 'null', concat('\"', triggerOutputs()['headers']['Callback-Url'], '\"')), ' }')}",
                "host": { "connection": { "name": "@parameters('$connections')['azuretables']['connectionId']" } },
                "method": "post",
                "path": "/Tables/status/entities"
              }
            },
            "4.PutAMessageOnAQueue": {
              "runAfter": { "3.InsertEntity": [ "Succeeded" ] },
              "type": "ApiConnection",
              "inputs": {
                "body": "@{variables('name')}",
                "host": { "connection": { "name": "@parameters('$connections')['azurequeues']['connectionId']" } },
                "method": "post",
                "path": "/todo/messages"
              }
            },
            "5.Response": {
              "runAfter": { "4.PutAMessageOnAQueue": [ "Succeeded" ] },
              "type": "Response",
              "kind": "Http",
              "inputs": {
                "body": "@{concat('{ \"key\":\"', variables('name'),'\", \"status\":\"Processing\" }')}",
                "headers": { "Content-Type": "application/json" },
                "schema": {
                  "properties": { "key": { "type": "string" } },
                  "type": "object"
                },
                "statusCode": 202
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('blobConnectionName'))]",
                "id": "[variables('blobConnectionApiId')]"
              },
              "azurequeues": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]",
                "id": "[variables('queueConnectionApiId')]"
              },
              "azuretables": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('tableConnectionName'))]",
                "id": "[variables('tableConnectionApiId')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/connections', variables('blobConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('tableConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "[variables('notifyResultName')]",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": { "$connections": { "type": "Object" } },
          "triggers": {
            "When_there_are_messages_in_a_queue": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 5
              },
              "splitOn": "@triggerBody()?['QueueMessagesList']?['QueueMessage']",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azurequeues']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent('done')}/message_trigger"
              }
            }
          },
          "actions": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azurequeues": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]",
                "id": "[variables('queueConnectionApiId')]"
              },
              "azuretables": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('tableConnectionName'))]",
                "id": "[variables('tableConnectionApiId')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('tableConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "[variables('processRequestName')]",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": { "$connections": { "type": "Object" } },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 5
              },
              "type": "Recurrence",
              "runtimeConfiguration": { "concurrency": { "runs": 10 } }
            }
          },
          "actions": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azurequeues": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]",
                "id": "[variables('queueConnectionApiId')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/connections', variables('queueConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "name": "[variables('surfaceResultName')]",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": { "$connections": { "type": "Object" } },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "method": "GET",
                "relativePath": "{key}",
                "schema": {}
              }
            }
          },
          "actions": {
            "1.GetEntity": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": { "connection": { "name": "@parameters('$connections')['azuretables']['connectionId']" } },
                "method": "get",
                "path": "/Tables/@{encodeURIComponent('status')}/entities(PartitionKey='@{encodeURIComponent('master')}',RowKey='@{encodeURIComponent(triggerOutputs()['relativePathParameters']['key'])}')"
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuretables": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('tableConnectionName'))]",
                "id": "[variables('tableConnectionApiId')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Web/connections', variables('tableConnectionName'))]"
      ]
    }
  ]
}